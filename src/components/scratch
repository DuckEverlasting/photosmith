const BoundingBoxSC = styled.div.attrs(props => ({
  style: {
    cursor: props.overrideCursor || "auto"
  }
}))`
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
`;

const ContainerSC = styled.div.attrs(props => ({
  style: {
    transform: `translateX(${props.offset.x}px)
                translateY(${props.offset.y}px)
                scale(${props.zoom})`,
    width: props.size ? props.size.w + "px" : "auto",
    height: props.size ? props.size.h + "px": "auto",
    cursor: props.overrideCursor || "move",
    boxShadow: `0 0 0 ${1 / props.zoom}px black`
  }
}))`
  position: relative;
  background: rgba(255,0,0,.2);
  box-sizing: content-box;
`;

const NResizeSC = styled.div.attrs(props => ({
  style: {
    top: `${-7.5 / props.zoom}px`,
    left: `${7.5 / props.zoom}px`,
    width: `calc(100% - ${15 / props.zoom}px)`,
    height: `${15 / props.zoom}px`
  }
}))`
  position: absolute;
  cursor: n-resize;
`;

const SResizeSC = styled.div.attrs(props => ({
  style: {
    bottom: `${-7.5 / props.zoom}px`,
    left: `${7.5 / props.zoom}px`,
    width: `calc(100% - ${15 / props.zoom}px)`,
    height: `${15 / props.zoom}px`
  }
}))`
  position: absolute;
  cursor: s-resize;
`;

const EResizeSC = styled.div.attrs(props => ({
  style: {
    bottom: `${7.5 / props.zoom}px`,
    left: `calc(100% - ${7.5 / props.zoom}px)`,
    width: `${15 / props.zoom}px`,
    height: `calc(100% - ${15 / props.zoom}px)`
  }
}))`
  position: absolute;
  cursor: e-resize;
`;

const WResizeSC = styled.div.attrs(props => ({
  style: {
    bottom: `${7.5 / props.zoom}px`,
    left: `${-7.5 / props.zoom}px`,
    width: `${15 / props.zoom}px`,
    height: `calc(100% - ${15 / props.zoom}px)`
  }
}))`
  position: absolute;
  cursor: w-resize;
`;

const NEResizeSC = styled.div.attrs(props => ({
  style: {
    top: `${-7.5 / props.zoom}px`,
    left: `calc(100% - ${7.5 / props.zoom}px)`,
    width: `${15 / props.zoom}px`,
    height: `${15 / props.zoom}px`,
    boxShadow: `0 0 0 ${1 / props.zoom}px black`
  }
}))`
  position: absolute;
  cursor: ne-resize;
`;

const SEResizeSC = styled.div.attrs(props => ({
  style: {
    bottom: `${-7.5 / props.zoom}px`,
    left: `calc(100% - ${7.5 / props.zoom}px)`,
    width: `${15 / props.zoom}px`,
    height: `${15 / props.zoom}px`,
    boxShadow: `0 0 0 ${1 / props.zoom}px black`
  }
}))`
  position: absolute;
  cursor: se-resize;
`;

const SWResizeSC = styled.div.attrs(props => ({
  style: {
    bottom: `${-7.5 / props.zoom}px`,
    left: `${-7.5 / props.zoom}px`,
    width: `${15 / props.zoom}px`,
    height: `${15 / props.zoom}px`,
    boxShadow: `0 0 0 ${1 / props.zoom}px black`
  }
}))`
  position: absolute;
  cursor: sw-resize;
`;

const NWResizeSC = styled.div.attrs(props => ({
  style: {
    top: `${-7.5 / props.zoom}px`,
    left: `${-7.5 / props.zoom}px`,
    width: `${15 / props.zoom}px`,
    height: `${15 / props.zoom}px`,
    boxShadow: `0 0 0 ${1 / props.zoom}px black`
  }
}))`
  position: absolute;
  cursor: nw-resize;
`;